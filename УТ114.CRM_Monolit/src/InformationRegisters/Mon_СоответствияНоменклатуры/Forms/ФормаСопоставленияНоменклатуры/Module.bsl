
&НаСервере
Процедура ПолучитьНовыйКлассификаторНоменклатурыНаСервере()
	
	Mon_Сервис.ПолучениеНоменклатурыПоТипамОбменов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьНовыйКлассификаторНоменклатуры(Команда)
	
	Если НачалоДня(ДатаЗагрузкиКлассификатора) = НачалоДня(ТекущаяДата()) Тогда 
	
		Если Вопрос("Классификатор загружен недавно. Вы уверены, что его требуется обновить?",РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ПолучитьНовыйКлассификаторНоменклатурыНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьСопоставлениеНаСервере(Оповещение)
		
	Если СопоставлениеНоменклатуры.Количество() = 0 Тогда
		
		Оповещение = "Список сопоставления номенклатуры пуст! Запись прервана!";
		Возврат;				
		
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Попытка
	   
		НаборЗаписей = РегистрыСведений.Mon_СоответствияНоменклатуры.СоздатьНаборЗаписей(); 
		НаборЗаписей.Отбор.ТипМонолита.Установить(ТипМонолита);
		НаборЗаписей.Записать();
		
		Для Каждого СтрокаТаблицы Из СопоставлениеНоменклатуры Цикл
			
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) 			Тогда Продолжить; КонецЕсли;			
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Упаковка) 				Тогда Продолжить; КонецЕсли;
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.НоменклатураМонолит) 	Тогда Продолжить; КонецЕсли;		
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.УпаковкаМонолит) 		Тогда Продолжить; КонецЕсли;			
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Коэффициент) 			Тогда Продолжить; КонецЕсли;
			
			НоваяЗапись = НаборЗаписей.Добавить();
			
			ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрокаТаблицы);
							
		КонецЦикла;	
		
		НаборЗаписей.Записать(Истина);
		
				
	Исключение
		
		Оповещение = ОписаниеОшибки();
		ОтменитьТранзакцию();
		Возврат;
		
	КонецПопытки;

	ЗафиксироватьТранзакцию();	
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьСопоставление(Команда)
	
	Оповещение = "";
	
	ЗаписатьСопоставлениеНаСервере(Оповещение);
	
	Если НЕ Оповещение = "" Тогда
		
		Предупреждение(Оповещение);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокСопоставленияНаСервере()
	
	//Прочитать последний классификатор, соединить его с тем, что есть и загрузить в ТЗ.
	СписокНоменклатуры = Неопределено;
	
	ОбновлениеДатыАктуальностиНоменклатуры();
	
	Если ТекстОбменаXML = "" Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Mon_Парсер.МонолитЗагрузка( ТекстОбменаXML, СписокНоменклатуры );
	
	СопоставлениеНоменклатуры.Очистить();
	
	Для Каждого Элемент Из СписокНоменклатуры Цикл
			
		НоваяСтрока = СопоставлениеНоменклатуры.Добавить();
		
		НоваяСтрока.ТипМонолита 					= ТипМонолита;
		НоваяСтрока.НоменклатураМонолит 			= Элемент.WareId;
		НоваяСтрока.НаименованиеНоменклатурыМонолит = Элемент.WareName;
		НоваяСтрока.УпаковкаМонолит 				= Элемент.UnitId;
		НоваяСтрока.Коэффициент 					= Элемент.Quantity;
		НоваяСтрока.НаименованиеУпаковкиМонолит 	= Элемент.UnitName;
		
	КонецЦикла;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
		|	ВТ.ТипМонолита КАК ТипМонолита,
		|	ВТ.НоменклатураМонолит КАК НоменклатураМонолит,
		|	ВТ.НаименованиеНоменклатурыМонолит КАК НаименованиеНоменклатурыМонолит,
		|	ВТ.УпаковкаМонолит КАК УпаковкаМонолит,
		|	ВТ.Коэффициент КАК Коэффициент,
		|	ВТ.НаименованиеУпаковкиМонолит КАК НаименованиеУпаковкиМонолит
		|ПОМЕСТИТЬ ВТ_ИзРеестра
		|ИЗ
		|	&СопоставлениеНоменклатуры КАК ВТ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ 
		|	ВТ_ИзРеестра.ТипМонолита КАК ТипМонолита,
		|	ВТ_ИзРеестра.НоменклатураМонолит КАК НоменклатураМонолит,
		|	ВТ_ИзРеестра.НаименованиеНоменклатурыМонолит КАК НаименованиеНоменклатурыМонолит,
		|	ВТ_ИзРеестра.УпаковкаМонолит КАК УпаковкаМонолит,
		|	ВТ_ИзРеестра.Коэффициент КАК Коэффициент,
		|	ВТ_ИзРеестра.НаименованиеУпаковкиМонолит КАК НаименованиеУпаковкиМонолит,
		|	Mon_СоответствияНоменклатуры.Номенклатура КАК Номенклатура,
		|	Mon_СоответствияНоменклатуры.Упаковка КАК Упаковка
		|ИЗ
		|	ВТ_ИзРеестра КАК ВТ_ИзРеестра
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Mon_СоответствияНоменклатуры КАК Mon_СоответствияНоменклатуры
		|		ПО Mon_СоответствияНоменклатуры.ТипМонолита = ВТ_ИзРеестра.ТипМонолита
		|			И Mon_СоответствияНоменклатуры.НоменклатураМонолит = ВТ_ИзРеестра.НоменклатураМонолит
		|			И Mon_СоответствияНоменклатуры.УпаковкаМонолит = ВТ_ИзРеестра.УпаковкаМонолит
		|			И Mon_СоответствияНоменклатуры.Коэффициент = ВТ_ИзРеестра.Коэффициент");
	
	Запрос.УстановитьПараметр("СопоставлениеНоменклатуры", СопоставлениеНоменклатуры.Выгрузить());
	
	Результат = Запрос.Выполнить();
	
	ТЗ = Результат.Выгрузить();
	
	СопоставлениеНоменклатуры.Загрузить(ТЗ);
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокСопоставления(Команда)
	
	ЗаполнитьСписокСопоставленияНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновлениеДатыАктуальностиНоменклатуры();
	
КонецПроцедуры

&НаСервере
Процедура ОбновлениеДатыАктуальностиНоменклатуры()
	
	Если НЕ ЗначениеЗаполнено(ТипМонолита) Тогда
		
		Элементы.ДатаАктуальностиСписковНоменклатурыМонолит.Заголовок = "";		
		Возврат;
		
	КонецЕсли;
	
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	Mon_ВходящиеДанные.ВидОбмена КАК ВидОбмена,
	               //|	Mon_ВходящиеДанные.ДатаОбработки КАК ДатаОбработки,
	               |	Mon_ВходящиеДанные.ДатаЗагрузки КАК ДатаЗагрузки,
	               |	Mon_ВходящиеДанные.ТекстОбмена КАК ТекстОбмена
	               |ИЗ
	               |	РегистрСведений.Mon_ВходящиеДанные КАК Mon_ВходящиеДанные
	               |ГДЕ
	               |	Mon_ВходящиеДанные.ВидОбмена = ЗНАЧЕНИЕ(Перечисление.Mon_ВидыОбменов.CRMWare)
	               |	И Mon_ВходящиеДанные.ШлюзОрганизации.ТипМонолита = &ТипМонолита
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДатаЗагрузки УБЫВ";
	Запрос.УстановитьПараметр("ТипМонолита", ТипМонолита);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ДатаЗагрузкиКлассификатора = Выборка.ДатаЗагрузки;
		Элементы.ДатаАктуальностиСписковНоменклатурыМонолит.Заголовок = "Последний запрос выполнялся: " + Выборка.ДатаЗагрузки;	
		ТекстОбменаXML = Выборка.ТекстОбмена;
		
	Иначе
		
		ДатаЗагрузкиКлассификатора = '00010101';
		Элементы.ДатаАктуальностиСписковНоменклатурыМонолит.Заголовок = "По данному типу монолита запросов номенклатуры не было!";
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипМонолитаПриИзменении(Элемент)
	
	ОбновлениеДатыАктуальностиНоменклатуры();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИзАртикуловНоменклатурыНаСервере()
		
	//Прочитать последний классификатор, соединить его с тем, что есть и загрузить в ТЗ.
	СписокНоменклатуры = Неопределено;
	
	ОбновлениеДатыАктуальностиНоменклатуры();
	
	Если ТекстОбменаXML = "" Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Mon_Парсер.МонолитЗагрузка( ТекстОбменаXML, СписокНоменклатуры );
	
	СопоставлениеНоменклатуры.Очистить();
	
	Для Каждого Элемент Из СписокНоменклатуры Цикл
			
		НоваяСтрока = СопоставлениеНоменклатуры.Добавить();
		
		НоваяСтрока.ТипМонолита 					= ТипМонолита;
		НоваяСтрока.НоменклатураМонолит 			= Элемент.WareId;
		НоваяСтрока.НаименованиеНоменклатурыМонолит = Элемент.WareName;
		НоваяСтрока.УпаковкаМонолит 				= Элемент.UnitId;
		НоваяСтрока.Коэффициент 					= Элемент.Quantity;
		НоваяСтрока.НаименованиеУпаковкиМонолит 	= Элемент.UnitName;
		
	КонецЦикла;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВТ.ТипМонолита КАК ТипМонолита,
	                      |	ВТ.НоменклатураМонолит КАК НоменклатураМонолит,
	                      |	ВТ.НаименованиеНоменклатурыМонолит КАК НаименованиеНоменклатурыМонолит,
	                      |	ВТ.УпаковкаМонолит КАК УпаковкаМонолит,
	                      |	ВТ.Коэффициент КАК Коэффициент,
	                      |	ВТ.НаименованиеУпаковкиМонолит КАК НаименованиеУпаковкиМонолит
	                      |ПОМЕСТИТЬ ВТ_ИзРеестра
	                      |ИЗ
	                      |	&СопоставлениеНоменклатуры КАК ВТ
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_ИзРеестра.ТипМонолита КАК ТипМонолита,
	                      |	ВТ_ИзРеестра.НоменклатураМонолит КАК НоменклатураМонолит,
	                      |	ВТ_ИзРеестра.НаименованиеНоменклатурыМонолит КАК НаименованиеНоменклатурыМонолит,
	                      |	ВТ_ИзРеестра.УпаковкаМонолит КАК УпаковкаМонолит,
	                      |	ВТ_ИзРеестра.Коэффициент КАК Коэффициент,
	                      |	ВТ_ИзРеестра.НаименованиеУпаковкиМонолит КАК НаименованиеУпаковкиМонолит,
	                      |	ВЫБОР
	                      |		КОГДА Mon_СоответствияНоменклатуры.Номенклатура ЕСТЬ NULL
	                      |			ТОГДА СправочникНоменклатура.Ссылка
	                      |		ИНАЧЕ Mon_СоответствияНоменклатуры.Номенклатура
	                      |	КОНЕЦ КАК Номенклатура,
	                      |	ВЫБОР
	                      |		КОГДА НЕ Mon_СоответствияНоменклатуры.Упаковка ЕСТЬ NULL
	                      |			ТОГДА Mon_СоответствияНоменклатуры.Упаковка
	                      |		КОГДА (ВТ_ИзРеестра.Коэффициент = 1 И ВТ_ИзРеестра.УпаковкаМонолит = ""ea"" ИЛИ ВТ_ИзРеестра.Коэффициент <> 1) И НЕ СправочникНоменклатура.ЕдиницаИзмерения ЕСТЬ NULL И СправочникНоменклатура.ЕдиницаИзмерения = &ЕдиницаИзмеренияКоличестваШтук
	                      |			ТОГДА СправочникНоменклатура.ЕдиницаИзмерения
						  |		КОГДА (ВТ_ИзРеестра.Коэффициент = 0.0333 И ВТ_ИзРеестра.УпаковкаМонолит = ""l"" ИЛИ ВТ_ИзРеестра.Коэффициент <> 0.0333) И НЕ СправочникНоменклатура.ЕдиницаИзмерения ЕСТЬ NULL И СправочникНоменклатура.ЕдиницаИзмерения = &ЕдиницаИзмеренияРазливнойПродукции
	                      |			ТОГДА СправочникНоменклатура.ЕдиницаИзмерения
	                      |	КОНЕЦ КАК Упаковка,
	                      |	СправочникНоменклатура.Ссылка КАК Ссылка,
	                      |	СправочникНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	                      | 
	                      |ИЗ
	                      |	ВТ_ИзРеестра КАК ВТ_ИзРеестра
						  |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	                      |			ПО ВТ_ИзРеестра.НоменклатураМонолит = СправочникНоменклатура.Артикул
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Mon_СоответствияНоменклатуры КАК Mon_СоответствияНоменклатуры
	                      
	                      |		ПО (Mon_СоответствияНоменклатуры.ТипМонолита = ВТ_ИзРеестра.ТипМонолита)
	                      |			И (Mon_СоответствияНоменклатуры.НоменклатураМонолит = ВТ_ИзРеестра.НоменклатураМонолит)
	                      |			И (Mon_СоответствияНоменклатуры.УпаковкаМонолит = ВТ_ИзРеестра.УпаковкаМонолит)
	                      |			И (Mon_СоответствияНоменклатуры.Коэффициент = ВТ_ИзРеестра.Коэффициент)");
	
	Запрос.УстановитьПараметр("СопоставлениеНоменклатуры", 			СопоставлениеНоменклатуры.Выгрузить());
	Запрос.УстановитьПараметр("ЕдиницаИзмеренияКоличестваШтук", 	Константы.ЕдиницаИзмеренияКоличестваШтук.Получить());
	Запрос.УстановитьПараметр("ЕдиницаИзмеренияРазливнойПродукции", Константы.ЕдиницаИзмеренияРазливнойПродукции.Получить());
	Результат = Запрос.Выполнить();
	
	ТЗ = Результат.Выгрузить();
	
	СопоставлениеНоменклатуры.Загрузить(ТЗ);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзАртикуловНоменклатуры(Команда)
	ЗаполнитьИзАртикуловНоменклатурыНаСервере();

КонецПроцедуры



